{
  "version": 3,
  "sources": ["../src/module.js", "../src/main.js"],
  "sourcesContent": ["export const MODULE_ID = 'pf2e-arp'\r\n\r\nfunction localize(...args) {\r\n    let [key, data] = args\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nfunction notify(str, arg1, arg2, arg3) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function info(...args) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function registerWrapper(target, fn, type = 'WRAPPER') {\r\n    return libWrapper.register(MODULE_ID, target, fn, type)\r\n}\r\n", "import { info, registerWrapper } from './module.js'\r\n\r\nconst PREPARE_WEAPON_DATA = 'CONFIG.PF2E.Item.documentClasses.weapon.prototype.prepareBaseData'\r\nconst PREPARE_WEAPON_DERIVED_DATA = 'CONFIG.PF2E.Item.documentClasses.weapon.prototype.prepareDerivedData'\r\nconst PREPARE_ARMOR_DATA = 'CONFIG.PF2E.Item.documentClasses.armor.prototype.prepareBaseData'\r\nconst PREPARE_Armor_DERIVED_DATA = 'CONFIG.PF2E.Item.documentClasses.armor.prototype.prepareDerivedData'\r\n\r\nHooks.once('init', () => {\r\n    registerWrapper(PREPARE_WEAPON_DATA, onPrepareWeaponData, 'WRAPPER')\r\n    registerWrapper(PREPARE_WEAPON_DERIVED_DATA, onPrepareWeaponDerivedData, 'WRAPPER')\r\n    registerWrapper(PREPARE_ARMOR_DATA, onPrepareArmorData, 'WRAPPER')\r\n    registerWrapper(PREPARE_Armor_DERIVED_DATA, onPrepareArmorDerivedData, 'WRAPPER')\r\n})\r\n\r\nHooks.once('ready', () => {\r\n    if (!game.user.isGM) return\r\n    if (game.settings.get('pf2e', 'automaticBonusVariant') !== 'noABP') {\r\n        game.settings.set('pf2e', 'automaticBonusVariant', 'noABP')\r\n        info('forceVariant')\r\n    }\r\n})\r\n\r\nfunction onPrepareWeaponData(wrapped) {\r\n    const actor = this.actor\r\n    if (!actor || !actor.isOfType('character')) return wrapped()\r\n\r\n    const level = actor.level\r\n\r\n    const traits = this._source.system.traits.value\r\n    if (traits.includes('alchemical') && traits.includes('bomb')) return wrapped()\r\n\r\n    this.system.potencyRune.value = level < 2 ? null : level < 10 ? 1 : level < 16 ? 2 : 3\r\n    this.system.strikingRune.value = level < 4 ? null : level < 12 ? 'striking' : level < 19 ? 'greaterStriking' : 'majorStriking'\r\n\r\n    wrapped()\r\n}\r\n\r\nconst WEAPON_POTENCY_PRICE = {\r\n    1: 35,\r\n    2: 935,\r\n    3: 8935,\r\n    4: 8935,\r\n}\r\nconst WEAPON_STRIKING_PRICE = {\r\n    striking: 65,\r\n    greaterStriking: 1065,\r\n    majorStriking: 31065,\r\n}\r\nfunction onPrepareWeaponDerivedData(wrapped) {\r\n    wrapped()\r\n\r\n    const traits = this._source.system.traits.value\r\n    if (!this.actor || (traits.includes('alchemical') && traits.includes('bomb'))) return\r\n\r\n    let gp = this.price.value.goldValue\r\n\r\n    const potency = this.system.potencyRune.value\r\n    if (potency) gp -= WEAPON_POTENCY_PRICE[potency]\r\n\r\n    const striking = this.system.strikingRune.value\r\n    if (striking) gp -= WEAPON_STRIKING_PRICE[striking]\r\n\r\n    if ((potency || striking) && !this.system.runes.property.length)\r\n        gp += new game.pf2e.Coins(this._source.system.price.value).goldValue\r\n\r\n    this.system.price.value = new game.pf2e.Coins({ gp })\r\n}\r\n\r\nfunction onPrepareArmorData(wrapped) {\r\n    if (this.isShield) return wrapped()\r\n\r\n    const actor = this.actor\r\n    if (!actor || !actor.isOfType('character')) return wrapped()\r\n\r\n    const level = actor.level\r\n\r\n    this.system.potencyRune.value = level < 5 ? null : level < 11 ? 1 : level < 18 ? 2 : 3\r\n    this.system.resiliencyRune.value =\r\n        level < 8 ? null : level < 14 ? 'resilient' : level < 20 ? 'greaterResilient' : 'majorResilient'\r\n\r\n    wrapped()\r\n}\r\n\r\nconst ARMOR_POTENCY_PRICE = {\r\n    1: 160,\r\n    2: 1060,\r\n    3: 20560,\r\n    4: 20560,\r\n}\r\nconst ARMOR_RESILIENCY_PRICE = {\r\n    resilient: 340,\r\n    greaterResilient: 3440,\r\n    majorResilient: 49440,\r\n}\r\nfunction onPrepareArmorDerivedData(wrapped) {\r\n    wrapped()\r\n\r\n    if (!this.actor || this.isShield) return\r\n\r\n    let gp = this.price.value.goldValue\r\n\r\n    const potency = this.system.potencyRune.value\r\n    if (potency) gp -= ARMOR_POTENCY_PRICE[potency]\r\n\r\n    const resiliency = this.system.resiliencyRune.value\r\n    if (resiliency) gp -= ARMOR_RESILIENCY_PRICE[resiliency]\r\n\r\n    if ((potency || resiliency) && !this.system.runes.property.length)\r\n        gp += new game.pf2e.Coins(this._source.system.price.value).goldValue\r\n\r\n    this.system.price.value = new game.pf2e.Coins({ gp })\r\n}\r\n"],
  "mappings": "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",
  "names": ["MODULE_ID", "localize", "args", "key", "data", "__name", "notify", "str", "arg1", "arg2", "arg3", "type", "permanent", "info", "registerWrapper", "target", "fn", "PREPARE_WEAPON_DATA", "PREPARE_WEAPON_DERIVED_DATA", "PREPARE_ARMOR_DATA", "PREPARE_Armor_DERIVED_DATA", "registerWrapper", "onPrepareWeaponData", "onPrepareWeaponDerivedData", "onPrepareArmorData", "onPrepareArmorDerivedData", "info", "wrapped", "actor", "level", "traits", "__name", "WEAPON_POTENCY_PRICE", "WEAPON_STRIKING_PRICE", "gp", "potency", "striking", "ARMOR_POTENCY_PRICE", "ARMOR_RESILIENCY_PRICE", "resiliency"]
}
