{
  "version": 3,
  "sources": ["../src/module.js", "../src/main.js"],
  "sourcesContent": ["export const MODULE_ID = 'pf2e-arp'\r\n\r\nfunction notify(str, arg1, arg2, arg3) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function info(...args) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function registerWrapper(target, fn, type = 'WRAPPER') {\r\n    return libWrapper.register(MODULE_ID, target, fn, type)\r\n}\r\n", "import { info, registerWrapper } from './module.js'\r\n\r\nconst PREPARE_WEAPON_DATA = 'CONFIG.PF2E.Item.documentClasses.weapon.prototype.prepareBaseData'\r\nconst PREPARE_ARMOR_DATA = 'CONFIG.PF2E.Item.documentClasses.armor.prototype.prepareBaseData'\r\n\r\nHooks.once('init', () => {\r\n    registerWrapper(PREPARE_WEAPON_DATA, onPrepareWeaponData, 'WRAPPER')\r\n    registerWrapper(PREPARE_ARMOR_DATA, onPrepareArmorData, 'WRAPPER')\r\n})\r\n\r\nHooks.once('ready', () => {\r\n    if (!game.user.isGM) return\r\n    if (game.settings.get('pf2e', 'automaticBonusVariant') !== 'noABP') {\r\n        game.settings.set('pf2e', 'automaticBonusVariant', 'noABP')\r\n        info('forceVariant')\r\n    }\r\n})\r\n\r\nfunction onPrepareArmorData(wrapped) {\r\n    if (this.isShield) return wrapped()\r\n\r\n    const actor = this.actor\r\n    if (!actor || !actor.isOfType('character')) return wrapped()\r\n\r\n    const level = actor.level\r\n\r\n    this.system.potencyRune.value = level < 5 ? null : level < 11 ? 1 : level < 18 ? 2 : 3\r\n    this.system.resiliencyRune.value =\r\n        level < 8 ? null : level < 14 ? 'resilient' : level < 20 ? 'greaterResilient' : 'majorResilient'\r\n\r\n    wrapped()\r\n}\r\n\r\nfunction onPrepareWeaponData(wrapped) {\r\n    const actor = this.actor\r\n    if (!actor || !actor.isOfType('character')) return wrapped()\r\n\r\n    const level = actor.level\r\n\r\n    const traits = this._source.system.traits.value\r\n    if (traits.includes('alchemical') && traits.includes('bomb')) return wrapped()\r\n\r\n    this.system.potencyRune.value = level < 2 ? null : level < 10 ? 1 : level < 16 ? 2 : 3\r\n    this.system.strikingRune.value = level < 4 ? null : level < 12 ? 'striking' : level < 19 ? 'greaterStriking' : 'majorStriking'\r\n\r\n    wrapped()\r\n}\r\n"],
  "mappings": "qFAAO,IAAMA,EAAY,WAEzB,SAASC,EAAOC,EAAKC,EAAMC,EAAMC,EAAM,CACnC,IAAMC,EAAO,OAAOH,GAAS,SAAWA,EAAO,OACzCI,EAAO,OAAOJ,GAAS,SAAWA,EAAO,OAAOC,GAAS,SAAWA,EAAO,OAC3EI,EAAY,OAAOL,GAAS,UAAYA,EAAO,OAAOC,GAAS,UAAYA,EAAOC,GAAQ,GAEhG,GAAG,cAAc,OAAO,SAASH,EAAKK,CAAI,EAAGD,EAAM,CAAE,UAAAE,CAAU,CAAC,CACpE,CANSC,EAAAR,EAAA,UAQF,SAASS,KAAQC,EAAM,CAC1B,GAAM,CAACT,EAAKC,EAAMC,CAAI,EAAIO,EAC1BV,EAAOC,EAAK,OAAQC,EAAMC,CAAI,CAClC,CAHgBK,EAAAC,EAAA,QAKT,SAASE,EAAgBC,EAAQC,EAAIR,EAAO,UAAW,CAC1D,OAAO,WAAW,SAASN,EAAWa,EAAQC,EAAIR,CAAI,CAC1D,CAFgBG,EAAAG,EAAA,mBCbhB,IAAMG,EAAsB,oEACtBC,EAAqB,mEAE3B,MAAM,KAAK,OAAQ,IAAM,CACrBC,EAAgBF,EAAqBG,EAAqB,SAAS,EACnED,EAAgBD,EAAoBG,EAAoB,SAAS,CACrE,CAAC,EAED,MAAM,KAAK,QAAS,IAAM,CACjB,KAAK,KAAK,MACX,KAAK,SAAS,IAAI,OAAQ,uBAAuB,IAAM,UACvD,KAAK,SAAS,IAAI,OAAQ,wBAAyB,OAAO,EAC1DC,EAAK,cAAc,EAE3B,CAAC,EAED,SAASD,EAAmBE,EAAS,CACjC,GAAI,KAAK,SAAU,OAAOA,EAAQ,EAElC,IAAMC,EAAQ,KAAK,MACnB,GAAI,CAACA,GAAS,CAACA,EAAM,SAAS,WAAW,EAAG,OAAOD,EAAQ,EAE3D,IAAME,EAAQD,EAAM,MAEpB,KAAK,OAAO,YAAY,MAAQC,EAAQ,EAAI,KAAOA,EAAQ,GAAK,EAAIA,EAAQ,GAAK,EAAI,EACrF,KAAK,OAAO,eAAe,MACvBA,EAAQ,EAAI,KAAOA,EAAQ,GAAK,YAAcA,EAAQ,GAAK,mBAAqB,iBAEpFF,EAAQ,CACZ,CAbSG,EAAAL,EAAA,sBAeT,SAASD,EAAoBG,EAAS,CAClC,IAAMC,EAAQ,KAAK,MACnB,GAAI,CAACA,GAAS,CAACA,EAAM,SAAS,WAAW,EAAG,OAAOD,EAAQ,EAE3D,IAAME,EAAQD,EAAM,MAEdG,EAAS,KAAK,QAAQ,OAAO,OAAO,MAC1C,GAAIA,EAAO,SAAS,YAAY,GAAKA,EAAO,SAAS,MAAM,EAAG,OAAOJ,EAAQ,EAE7E,KAAK,OAAO,YAAY,MAAQE,EAAQ,EAAI,KAAOA,EAAQ,GAAK,EAAIA,EAAQ,GAAK,EAAI,EACrF,KAAK,OAAO,aAAa,MAAQA,EAAQ,EAAI,KAAOA,EAAQ,GAAK,WAAaA,EAAQ,GAAK,kBAAoB,gBAE/GF,EAAQ,CACZ,CAbSG,EAAAN,EAAA",
  "names": ["MODULE_ID", "notify", "str", "arg1", "arg2", "arg3", "type", "data", "permanent", "__name", "info", "args", "registerWrapper", "target", "fn", "PREPARE_WEAPON_DATA", "PREPARE_ARMOR_DATA", "registerWrapper", "onPrepareWeaponData", "onPrepareArmorData", "info", "wrapped", "actor", "level", "__name", "traits"]
}
